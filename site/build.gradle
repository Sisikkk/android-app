plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    // id 'kotlin-android-extensions'
}

def keystoreProperties = new Properties()
if (new File("keystore.properties").exists()) {
    keystoreProperties.load(new FileInputStream(rootProject.file("keystore.properties")))
} else {
    keystoreProperties.load(new FileInputStream(rootProject.file("fakekeystore.properties")))
}

android {
    signingConfigs {
        release {
            keyAlias keystoreProperties['release.key.alias']
            keyPassword keystoreProperties['release.key.password']
            storeFile file(keystoreProperties['release.store.file'])
            storePassword keystoreProperties['release.store.password']
            v1SigningEnabled false
            v2SigningEnabled true
        }
    }

    compileSdkVersion 33

    defaultConfig {
        applicationId "net.ivpn.client"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 127
        versionName "2.10.4"
        ndkVersion "25.1.8937393"

        manifestPlaceholders = [SENTRY_DSN: keystoreProperties['sentry.dsn']]
        buildConfigField "String", "BILLING_PUBLIC_KEY", keystoreProperties['billing.public.key']

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            matchingFallbacks = ['release']
        }
        debug {
            signingConfig signingConfigs.debug
            matchingFallbacks = ['debug']
        }
    }

    flavorDimensions "api"
    productFlavors {
        production {
            dimension "api"
            buildConfigField "String", "API_TYPE", "\"production\""
            buildConfigField "String", "BASE_URL", "\"api.ivpn.net\""
        }
        stage {
            dimension "api"
            buildConfigField "String", "API_TYPE", "\"stage\""
            buildConfigField "String", "BASE_URL", keystoreProperties['staging.url']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    // androidExtensions {
    //     experimental = true
    // }

    // dexOptions {
    //     incremental true
    //     javaMaxHeapSize "4g"
    // }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation project(path: ':core')

    // Navigation component dynamic feature module support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
}